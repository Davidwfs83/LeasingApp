//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Nipendo.Common.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum dvd_cardriverState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// 
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("dvd_cardriver")]
	public partial class dvd_cardriver : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string dvd_cardriver_account = "dvd_cardriver_account";
			public const string dvd_cardriver_car = "dvd_cardriver_car";
			public const string dvd_cardriver_oppor = "dvd_cardriver_oppor";
			public const string dvd_cardriverId = "dvd_cardriverid";
			public const string Id = "dvd_cardriverid";
			public const string dvd_driverid = "dvd_driverid";
			public const string dvd_email = "dvd_email";
			public const string dvd_firstname = "dvd_firstname";
			public const string dvd_lastname = "dvd_lastname";
			public const string dvd_Name = "dvd_name";
			public const string dvd_phone = "dvd_phone";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string dvd_dvd_cardriver_cardriver_account_account = "dvd_dvd_cardriver_cardriver_account_account";
			public const string dvd_dvd_cardriver_cardriver_car_dvd_car = "dvd_dvd_cardriver_cardriver_car_dvd_car";
			public const string dvd_dvd_cardriver_cardriver_oppor_opportunity = "dvd_dvd_cardriver_cardriver_oppor_opportunity";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public dvd_cardriver() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "dvd_cardriver";
		
		public const string EntitySchemaName = "dvd_cardriver";
		
		public const string PrimaryIdAttribute = "dvd_cardriverid";
		
		public const string PrimaryNameAttribute = "dvd_name";
		
		public const string EntityLogicalCollectionName = "dvd_cardrivers";
		
		public const string EntitySetName = "dvd_cardrivers";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// המזהה הייחודי של המשתמש שיצר את הרשומה.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// התאריך והשעה שבהם נוצרה הרשומה.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// המזהה הייחודי של המשתמש הנציג שיצר את הרשומה.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_cardriver_account")]
		public Microsoft.Xrm.Sdk.EntityReference dvd_cardriver_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dvd_cardriver_account");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_cardriver_account");
				this.SetAttributeValue("dvd_cardriver_account", value);
				this.OnPropertyChanged("dvd_cardriver_account");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_cardriver_car")]
		public Microsoft.Xrm.Sdk.EntityReference dvd_cardriver_car
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dvd_cardriver_car");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_cardriver_car");
				this.SetAttributeValue("dvd_cardriver_car", value);
				this.OnPropertyChanged("dvd_cardriver_car");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_cardriver_oppor")]
		public Microsoft.Xrm.Sdk.EntityReference dvd_cardriver_oppor
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dvd_cardriver_oppor");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_cardriver_oppor");
				this.SetAttributeValue("dvd_cardriver_oppor", value);
				this.OnPropertyChanged("dvd_cardriver_oppor");
			}
		}
		
		/// <summary>
		/// המזהה הייחודי של מופעי ישות
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_cardriverid")]
		public System.Nullable<System.Guid> dvd_cardriverId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("dvd_cardriverid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_cardriverId");
				this.SetAttributeValue("dvd_cardriverid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("dvd_cardriverId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_cardriverid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.dvd_cardriverId = value;
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_driverid")]
		public string dvd_driverid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dvd_driverid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_driverid");
				this.SetAttributeValue("dvd_driverid", value);
				this.OnPropertyChanged("dvd_driverid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_email")]
		public string dvd_email
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dvd_email");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_email");
				this.SetAttributeValue("dvd_email", value);
				this.OnPropertyChanged("dvd_email");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_firstname")]
		public string dvd_firstname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dvd_firstname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_firstname");
				this.SetAttributeValue("dvd_firstname", value);
				this.OnPropertyChanged("dvd_firstname");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_lastname")]
		public string dvd_lastname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dvd_lastname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_lastname");
				this.SetAttributeValue("dvd_lastname", value);
				this.OnPropertyChanged("dvd_lastname");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_name")]
		public string dvd_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dvd_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_Name");
				this.SetAttributeValue("dvd_name", value);
				this.OnPropertyChanged("dvd_Name");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_phone")]
		public string dvd_phone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("dvd_phone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_phone");
				this.SetAttributeValue("dvd_phone", value);
				this.OnPropertyChanged("dvd_phone");
			}
		}
		
		/// <summary>
		/// מספר הרצף של הייבוא שיצר את הרשומה.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// המזהה הייחודי של המשתמש ששינה את הרשומה.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// התאריך והשעה שבהם הרשומה השתנתה.‬‬
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// המזהה הייחודי של המשתמש הנציג ששינה את הרשומה.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// התאריך והשעה שבהם הועברה הרשומה.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// מזהה בעלים
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// המזהה הייחודי של היחידה העסקית שהרשומה נמצאת בבעלותה
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// ‏‏ה‏‏מזהה הייחודי של הצוות שהרשומה נמצאת בבעלותו.‬
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// המזהה הייחודי של המשתמש שהרשומה נמצאת בבעלותו.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// מצב הנהג ברכב
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Nipendo.Common.Entities.dvd_cardriverState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Nipendo.Common.Entities.dvd_cardriverState)(System.Enum.ToObject(typeof(Nipendo.Common.Entities.dvd_cardriverState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// הסיבה למצב של הנהג ברכב
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// ‏‏לשימוש פנימי בלבד.‬
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// ‏‏קוד אזור הזמן שהיה בשימוש בעת יצירת הרשומה.‬
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// מספר גירסה
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N dvd_incident_incident_cardriver_dvd_cardriver
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("dvd_incident_incident_cardriver_dvd_cardriver")]
		public System.Collections.Generic.IEnumerable<Nipendo.Common.Entities.Incident> dvd_incident_incident_cardriver_dvd_cardriver
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Nipendo.Common.Entities.Incident>("dvd_incident_incident_cardriver_dvd_cardriver", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_incident_incident_cardriver_dvd_cardriver");
				this.SetRelatedEntities<Nipendo.Common.Entities.Incident>("dvd_incident_incident_cardriver_dvd_cardriver", null, value);
				this.OnPropertyChanged("dvd_incident_incident_cardriver_dvd_cardriver");
			}
		}
		
		/// <summary>
		/// N:1 dvd_dvd_cardriver_cardriver_account_account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_cardriver_account")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("dvd_dvd_cardriver_cardriver_account_account")]
		public Nipendo.Common.Entities.Account dvd_dvd_cardriver_cardriver_account_account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Nipendo.Common.Entities.Account>("dvd_dvd_cardriver_cardriver_account_account", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_dvd_cardriver_cardriver_account_account");
				this.SetRelatedEntity<Nipendo.Common.Entities.Account>("dvd_dvd_cardriver_cardriver_account_account", null, value);
				this.OnPropertyChanged("dvd_dvd_cardriver_cardriver_account_account");
			}
		}
		
		/// <summary>
		/// N:1 dvd_dvd_cardriver_cardriver_car_dvd_car
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_cardriver_car")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("dvd_dvd_cardriver_cardriver_car_dvd_car")]
		public Nipendo.Common.Entities.dvd_car dvd_dvd_cardriver_cardriver_car_dvd_car
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Nipendo.Common.Entities.dvd_car>("dvd_dvd_cardriver_cardriver_car_dvd_car", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_dvd_cardriver_cardriver_car_dvd_car");
				this.SetRelatedEntity<Nipendo.Common.Entities.dvd_car>("dvd_dvd_cardriver_cardriver_car_dvd_car", null, value);
				this.OnPropertyChanged("dvd_dvd_cardriver_cardriver_car_dvd_car");
			}
		}
		
		/// <summary>
		/// N:1 dvd_dvd_cardriver_cardriver_oppor_opportunity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dvd_cardriver_oppor")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("dvd_dvd_cardriver_cardriver_oppor_opportunity")]
		public Nipendo.Common.Entities.Opportunity dvd_dvd_cardriver_cardriver_oppor_opportunity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Nipendo.Common.Entities.Opportunity>("dvd_dvd_cardriver_cardriver_oppor_opportunity", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("dvd_dvd_cardriver_cardriver_oppor_opportunity");
				this.SetRelatedEntity<Nipendo.Common.Entities.Opportunity>("dvd_dvd_cardriver_cardriver_oppor_opportunity", null, value);
				this.OnPropertyChanged("dvd_dvd_cardriver_cardriver_oppor_opportunity");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public dvd_cardriver(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["dvd_cardriverid"] = base.Id;
                        break;
                    case "dvd_cardriverid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}